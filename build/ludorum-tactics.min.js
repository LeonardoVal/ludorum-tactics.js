//! ludorum-tactics 0.0.1

!function(a,b){"use strict";"function"==typeof define&&define.amd?define(["creatartis-base","ludorum"],b):"object"==typeof module&&module.exports?module.exports=b(require("creatartis-base"),require("ludorum")):a.ludorum_gamepack=b(a.base,a.ludorum)}(this,function a(b,c){"use strict";var d=b.declare,e=b.iterable,f=c.Game,g=b.raiseIf,h={__name__:"ludorum-tactics",__init__:a,__dependencies__:[b,c]},i=h.TacticsPiece=d({constructor:function(a,b,c,d,e,f,g){this.position=f,this.hp=a,this.damageReceived=0,this.hitChance=b,this.saveChance=c,this.attackRange=d,this.movement=e,this.owner=g},clone:function(){var a=new i;return a.position=this.position,a.hp=this.hp,a.damageReceived=this.damageReceived,a.hitChance=this.hitChance,a.saveChance=this.saveChance,a.attackRange=this.attackRange,a.movement=this.movement,a.owner=this.owner,a},moves:function(a){for(var b={},c=[this.position],d=0;d<=this.movementSpeed;d++)c.forEach(function(d){if(!(d in b)){b[d]=d;var e=[d[0],d[1]+1],f=[d[0]-1,d[1]],g=[d[0]+1,d[1]],h=[d[0],d[1]-1];[e,f,g,h].forEach(function(b){a.noWalkTerrains.search(a.terrain.square(b))<0&&c.push(b)})}});return e(b).select(1).toArray()},BresenhamLineAlgorithm:function(a,b){var c=this.position[0],d=this.position[1],e=b.position[0],f=b.position[1],g=Math.abs(e-c),h=e>c?1:-1,i=Math.abs(f-d);if(1>=g&&1>=i)return!0;for(var j=f>d?1:-1,k=(g>i?g:-i)/2;;){if(a.noViewTerrains.search(-1==a.terrain.square([c,d])))return!1;if(c===e&&d===f)break;var l=k;l>-g&&(k-=i,c+=h),i>l&&(k+=g,d+=j)}return!0},pieceInLineOfSight:function(a,b,c){switch(expression){case"bline":return v=this.BresenhamLineAlgorithm(a,b);default:return v=this.BresenhamLineAlgorithm(a,b)}},inLineOfSight:function(a,b,c){var d=new i;switch(d.position=b,expression){case"bline":return v=this.BresenhamLineAlgorithm(a,b);default:return v=this.BresenhamLineAlgorithm(a,b)}},possibleAttacks:function(a){var b=this;return a.pieces.filter(function(c){if(c.owner!=b.owner&&pieceInLineOfSight(a,c,"bline")){var d=Math.sqrt(Math.pow(b.position[0]-c.position[0],2)+Math.pow(b.position[1]-piec.position[1],2));return d<=b.attackRange}return!1})},attack:function(a){return a=a.clone(),a.damageReceived+=this.damage*this.hitChance*(1-a.saveChance),a},isAlive:function(){return this.hp>this.damageReceived}});h.TacticsGame=d(f,{players:["Left","Right"],name:"TacticsGame",noViewTerrains:"x#",noWalkTerrains:"o#",terrain:new c.utils.CheckerboardFromString(10,15,"...x..............x.....o............xxo..............#..............#.......oo#............oox..................oox........xx..................#....."),constructor:function(a,b,c){f.call(this,a[b].owner),this.pieces=a,this.currentPiece=0|b,this.hasMoved=!!c},moves:function(){var a=this.pieces[this.currentPiece];return this.hasMoved?a.possibleAttacks(this):a.moves(this)},next:function(a){var b=this.pieces[this.currentPiece],c=this.pieces.concat([]);if(g(!a.hasOwnProperty(b.owner),"Active player has no moves in ",JSON.stringify(a),"!"),this.hasMoved){var d=a[b.owner],e=this.pieces[d],f=b.attack(e);return f.isAlive()?c[d]=f:(d<this.currentPiece&&this.currentPiece--,c.splice(d,1)),new this.constructor(c,(this.currentPiece+1)%this.pieces.length,!1)}var h=b.clone();return h.position=a[b.owner],c[b]=h,new this.constructor(c,this.currentPiece,!0)},result:function(){var a=this,b=a.players.map(function(b){return a.pieces.filter(function(a){return a.owner===b}).length>0});return 0===b[0]?a.defeat(this.players[0]):0===b[1]?a.defeat(this.players[1]):null},generateThreatMap:function(){}});return h});
//# sourceMappingURL=ludorum-tactics.min.js.map